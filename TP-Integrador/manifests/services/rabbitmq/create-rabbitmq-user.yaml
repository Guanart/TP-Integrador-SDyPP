# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: create-rabbitmq-user
#   namespace: services
# spec:
#   template:
#     spec:
#       containers:
#       - name: rabbitmq
#         image: rabbitmq:3-management
#         command: ["sh", "-c", "rabbitmqctl add_user user password && rabbitmqctl set_user_tags user administrator && rabbitmqctl set_permissions -p / user '.*' '.*' '.*'"]
#         env:
#         - name: RABBITMQ_ERLANG_COOKIE
#           valueFrom:
#             secretKeyRef:
#               name: rabbitmq-erlang-cookie
#               key: cookie
#         volumeMounts:
#         - name: rabbitmq-data
#           mountPath: /var/lib/rabbitmq
#       restartPolicy: OnFailure
#       volumes:
#       - name: rabbitmq-data
#         persistentVolumeClaim:
#           claimName: rabbitmq-pvc

# apiVersion: v1
# kind: Secret
# metadata:
#   name: user-credentials # IMPORTANT: this Secret name must match .spec.importCredentialsSecret.name field in User object
#   namespace: services
# type: Opaque
# stringData:
#   username: user
#   passwordHash: b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86
# ---
# apiVersion: rabbitmq.com/v1beta1
# kind: User
# metadata:
#   name: my-admin-user
#   namespace: services
# spec:
#   tags:
#   - administrator
#   rabbitmqClusterReference:
#     name: test # rabbitmqCluster must exist in the same namespace as this resource
#   importCredentialsSecret:
#     name: user-credentials # must match the name of the Secret


